<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven >
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 2.静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>


    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 4.扫描controller相关的bean -->
    <context:component-scan base-package="com.controller" />
    <!--&lt;!&ndash;拦截器&ndash;&gt;-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller &ndash;&gt;-->
            <!--<mvc:mapping path="/**" />-->
            <!--&lt;!&ndash; /register 和 /login 不需要拦截&ndash;&gt;-->
            <!--&lt;!&ndash;<mvc:exclude-mapping path="/register" />&ndash;&gt;-->
            <!--&lt;!&ndash;spring-mvc-3.2.xsd 下面才不会报错&ndash;&gt;-->
            <!--&lt;!&ndash;防止静态文件被拦截&ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/**/fonts/*"/>-->
            <!--<mvc:exclude-mapping path="/**/*.css"/>-->
            <!--<mvc:exclude-mapping path="/**/*.js"/>-->
            <!--<mvc:exclude-mapping path="/**/*.png"/>-->
            <!--<mvc:exclude-mapping path="/**/*.gif"/>-->
            <!--<mvc:exclude-mapping path="/**/*.jpg"/>-->
            <!--<mvc:exclude-mapping path="/**/*.jpeg"/>-->
            <!--<mvc:exclude-mapping path="/**/*login*"/>-->
            <!--<mvc:exclude-mapping path="/**/*register.html"/>-->
            <!--<bean class="com..filter.JWTCheckInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 &ndash;&gt;-->
    <!--</mvc:interceptors>-->
</beans>